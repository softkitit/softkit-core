name: PR on main for apps

permissions:
  contents: write
  pull-requests: write
  id-token: write

on:
  pull_request:
    branches:
      - main
    types: [ opened, reopened, synchronize ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.define-envs.outputs.environments }}

    steps:
      - name: Define envs information
        id: define-envs
        run: |
            echo environments='${{ vars.RELEASE_ENVIRONMENTS }}' >> $GITHUB_OUTPUT

  lint-and-run-tests:
    needs: [ prepare ]
    runs-on: ubuntu-latest
    outputs:
        affected-projects: ${{ steps.get-affected-projects.outputs.affected-projects }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Verify if last release tag exists, and define nx command to use
        id: nx
        run: |
           echo exec-cmd="npx nx affected --base=last-release" >> $GITHUB_OUTPUT
           echo show-apps="npx nx show projects --json --type app --affected --base last-release" >> $GITHUB_OUTPUT

      - name: Install deps
        run: yarn install

      - name: Check spell
        run: ${{ steps.nx.outputs.exec-cmd }} -t check-spell

      - name: Build docs
        run: ${{ steps.nx.outputs.exec-cmd }} -t build-fe

      - name: Get affected projects
        id: get-affected-projects
        run: echo affected-projects=$(${{ steps.nx.outputs.show-apps }} --with-target build-fe) >> $GITHUB_OUTPUT

  init-state-app:
    needs: [ lint-and-run-tests, prepare ]
    uses: softkitit/github-actions-terraform/.github/workflows/controller-initialize-terraform-state.yml@main

    if: ${{ needs.lint-and-run-tests.outputs.affected-projects != '[]' && needs.prepare.outputs.environments != ''}}

    strategy:
      matrix:
        environment: ${{ fromJson(needs.prepare.outputs.environments) }}
        project: ${{ fromJson(needs.lint-and-run-tests.outputs.affected-projects) }}
    with:
      organization: ${{ github.event.repository.owner.login }}
      repository-name: ${{ github.event.repository.name }}
      project-name: ${{ matrix.project }}
      environment: ${{ matrix.environment }}
      terraform-folder: apps/${{ matrix.project }}/terraform

    secrets: inherit

  plan-app:
    needs: [lint-and-run-tests, init-state-app, prepare]
    if: ${{ needs.lint-and-run-tests.outputs.affected-projects != '[]' && needs.prepare.outputs.environments != ''}}
    strategy:
      matrix:
        environment: ${{ fromJson(needs.prepare.outputs.environments) }}
        project: ${{ fromJson(needs.lint-and-run-tests.outputs.affected-projects) }}
    uses: softkitit/github-actions-terraform/.github/workflows/ci-terraform-plan-and-format.yml@main
    with:
      environment: ${{ matrix.environment }}
      terraform-folder: apps/${{ matrix.project }}/terraform
      override-plan-comment: false
    secrets: inherit


